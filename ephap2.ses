objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}
{
xpanel("RunControl", 0)
v_init = 0
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 1000
xvalue("t","t", 2 )
tstop = 1000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 100
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 0.01
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(32,110)
}

//Begin LinearCircuit[0]
{
load_file("lincir.hoc", "LinearCircuit")
}
{
ocbox_ = new LinearCircuit(1)
}
{object_push(ocbox_)}
{mkelm(8, 170, 90, 2, -1.5708)}
{mklabel(0, "a(0.5)", 56.48, -6.2454)}
{sel.extra_info.set("a", 0.5) sel.extra_info.name(sel)}
{mkelm(3, 110, 90, 3, 1.5708)}
{mklabel(0, "B", -25.6055, 1.5286)}
{sel.extra_info.restore()}
3
1e+09 1
1e+09 0
1e+09 0
{mkelm(0, 140, 115, 3.04138, -0.165149)}
{mkelm(0, 140, 65, 3.04138, 0.165149)}
{mkelm(5, 110, -10, 2, 0)}
{mkelm(1, 110, 35, 2.5, 1.5708)}
1
{mklabel(0, "R", 18.249, 5.9433)}
{g.exec_menu("Simulate")}
{sel = nil}
{object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,300,0,200)
scene_vector_[2] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.label(226.48, 83.7546, "a(0.5)", 1, 1, 0.5, 0.5, 1)
save_window_.label(84.3945, 91.5286, "B", 1, 1, 0.5, 0.5, 1)
save_window_.label(128.249, 40.9433, "R", 1, 1, 0.5, 0.5, 1)
}
ocbox_.map("LinearCircuit[0]", 383, 24, 294.72, 254.4)
}
objref ocbox_
//End LinearCircuit[0]

{
save_window_ = new Graph(0)
save_window_.size(1000,2000,-0.5,1)
scene_vector_[4] = save_window_
{save_window_.view(1000, -0.5, 1000, 1.5, 710, 28, 500.16, 420.16)}
flush_list.append(save_window_)
save_window_.save_name("flush_list.")
objectvar rvp_
rvp_ = new RangeVarPlot("v")
b rvp_.begin(0)
b rvp_.end(1)
rvp_.origin(0)
save_window_.addobject(rvp_, 2, 1, 0.8, 0.9)
objectvar rvp_
rvp_ = new RangeVarPlot("v")
a rvp_.begin(0)
a rvp_.end(1)
rvp_.origin(0)
save_window_.addobject(rvp_, 3, 1, 0.8, 0.9)
}

//Begin Grapher
{
load_file("grapher.hoc")}
{
ocbox_=new Grapher(1)

ocbox_.info("beta","beta", "set_re() run()", 0, 1, 0, 1, 99, 0.01, 0.99)
{
save_window_=ocbox_.g
save_window_.size(0,1,0,1)
scene_vector_[5] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.xexpr("beta", 0)
save_window_.addexpr("b.v(.5)", 1, 1, 0.8, 0.9, 2)
}
ocbox_ = ocbox_.vbox
ocbox_.map("Grapher", 381, 323, 308.16, 453.12)
}
objref ocbox_
//End Grapher

{
xpanel("PARAMS", 0)
Ns = 1
xvalue("Number Stimulated Ns","Ns", 1,"extcelnet()", 0, 0 )
N = 2
xvalue("Total Number N","N", 1,"extcelnet()", 0, 0 )
beta = 0.05
xvalue("beta","beta", 1,"set_re()", 0, 0 )
xpanel(31,505)
}
objectvar scene_vector_[1]
{doNotify()}
